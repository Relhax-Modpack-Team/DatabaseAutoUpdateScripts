<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<AutomationSequence documentVersion="1.0">
  <!-- single_wotmod.xml
    Author:  Willster419
    Created: 2021-09-29
    Description: Update a package that is a variable number of png files. A difference in the number is considered an update required.
    This sequence template does the following tasks:
     - downloads the modpack zip file
     - extracts the modpack zip file's png files to a custom directory
     - extracts the source's png files to the package final output directory
     - compares the modpack and source's png directories.
     - if update needed, creates the final new zip package with the source's wotmod
     - uploads the new package to the server
    Required macros:
    {working_folder_modpack}       - The working folder of the modpack zip file and extraction processes
    {working_folder_source}        - The working folder of the source zip file and extracation processes
    {working_folder_package}       - The working folder of the newly created zip file package for the database
    {package_folder_path}          - The path to use for creating the modpack package's folder path, starting from <res_mods/versiondir> (gui/maps...)
    {source_path_arg}              - The argument passed to the 7zip shell_execute of the source, in case specification of a specific folder of icons is needed
  -->
  <TaskDefinitions>
    <!-- download the modpack current zip file-->
    <Task ID="download_modpack" Command="package_download" FilePath="{working_folder_modpack}\{packageName}_ftp.zip"/>

    <!-- create the path to extract the modpack files -->
    <Task ID="create_modpack_temp_directory_path" Command="create_directory" DirectoryPath="{working_folder_modpack}\png_files"/>

    <!-- extract the modpack files -->
    <!-- 'e' means to extract (to the work direcotry, without using the zip file's paths), and -r means to recurse into the zip folder's directories -->
    <Task ID="extract_modpack" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_modpack}" Cmd="e {packageName}_ftp.zip *.png -r -o&quot;{working_folder_modpack}\png_files&quot;"/>

    <!-- create the path to extract the source files -->
    <Task ID="create_final_package_directory_path" Command="create_directory" DirectoryPath="{working_folder_package}\zip\res_mods\versiondir\{package_folder_path}"/>

    <!-- extract the source files -->
    <!-- 'e' means to extract (to the work direcotry, without using the zip file's paths), and -r means to recurse into the zip folder's directories -->
    <Task ID="extract_source" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="e {packageName}_source.zip {source_path_arg}*.png -r -o&quot;{working_folder_package}\zip\res_mods\versiondir\{package_folder_path}&quot;"/>

    <!-- compare the hashes of each of the png files. if the number of files is different, then log it as a needed update -->
    <Task ID="compare_start" Command="compare_start"/>
    <Task ID="compare_contour_icons" Command="directory_compare_count" SearchPattern="*.png" Recursive="False"
      DirectoryComparePathA="{working_folder_modpack}\png_files"
      DirectoryComparePathB="{working_folder_package}\zip\res_mods\versiondir\{package_folder_path}"/>
    <Task ID="compare_end" Command="compare_end"/>

    <!-- create the new zip -->
    <Task ID="create_zip" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_package}\zip" Cmd="a -tzip -mx=9 -r final.zip res_mods"/>

    <!-- update version field in database -->
    <Task ID="update_package_version" Command="update_package_property" PropertyName="Version" PropertyValue="{clientVersion}" TargetPackageUID="this"/>

    <!-- upload to the server -->
    <Task ID="upload_zip" Command="package_upload" FilePath="{working_folder_package}\zip\final.zip" ZipFileName="{packageName}_{clientVersion}_{date}.zip"/>
  </TaskDefinitions>
</AutomationSequence>