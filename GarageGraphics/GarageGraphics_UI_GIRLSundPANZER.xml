<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<AutomationSequence documentVersion="1.0">
  <!-- Specify macros here -->
  <Macros>
  </Macros>

  <!-- Specify the tasks to run -->
  <TaskDefinitions>
    <!-- run base set of tasks for download GuP source files -->
    <Task ID="import_GuP_Start" Command="import_task" RepoUrlPath="Task_templates/GarageGraphics/GarageGraphics_GuP.xml"/>

    <!-- extract source -->
    <Task ID="extract_source" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}"
      Cmd="x {packageName}.zip -ores_mods\versiondir -x!说明.txt -x!Affiche4.png -x!login.swf -x!logos.swf -x!waiting.swf -x!waitingTransition.swf -x!__login_logo.png -x!__login_bg.png -x!loading_award.png -r"/>

    <!-- extract the modpack package -->
    <Task ID="extract_modpack" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_modpack}" Cmd="x {packageName}.zip"/>

    <!-- Compare source and destination. If the number of files is different, then log it as a needed update -->
    <Task ID="compare_start" Command="compare_start"/>
    <Task ID="compare_all_files" Command="directory_compare_count" SearchPattern="*" Recursive="True"
      DirectoryComparePathA="{working_folder_modpack}\res_mods\versiondir"
      DirectoryComparePathB="{working_folder_source}\res_mods\versiondir"/>
    <Task ID="compare_end" Command="compare_end"/>

    <!-- update modpack files for the package -->
    <Task ID="update_modpack" Command="directory_copy" DirectoryPath="{working_folder_source}\res_mods\versiondir" SearchPattern="*" Recursive="true" DestinationPath="{working_folder_package}\res_mods\versiondir"/>

    <!-- update version field in database -->
    <Task ID="import_update_package_version_from_wgmods" Command="import_task" RepoUrlPath="Task_templates/update_package_version_from_wgmods.xml"/>

    <!-- create new package zip and upload to the server -->
    <Task ID="create_upload_zip_filename_macro" Command="macro_create" MacroName="upload_zip_filename" MacroValue="{packageName}_{clientVersion}_{date}.zip"/>
    <Task ID="import_create_upload_zip" Command="import_task" RepoUrlPath="Task_templates/create_upload_zip.xml"/>
  </TaskDefinitions>

</AutomationSequence>