<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<AutomationSequence documentVersion="1.0">
  <!-- Specify macros here -->
  <Macros>
  </Macros>
  <TaskDefinitions>
  
    <!-- create work dirs and macros -->
    <Task ID="import_createWD" Command="import_task" RepoUrlPath="Task_templates/create_workDirs_macros.xml"/>    

    <!-- get dl-url -->
    <Task ID="import_getDLUrl" Command="import_task" RepoUrlPath="Task_templates/getDownloadUrl_THISindex0.xml"/>
    
    <!-- download the source zip file, which *could* implicitly creates the directories, if we didn't define them first -->
    <Task ID="import_dowloadSource" Command="import_task" RepoUrlPath="Task_templates/downloadSourceStatic.xml"/>
    
    
    
    <!-- extract source files-->
    <Task ID="extract_source" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="x {last_download_filename} *.*.*_**** -r -x!com.*"/>
    <Task ID="extract_source2" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="e {last_download_filename}  -o{working_folder_package}\mods\versiondir\com.modxvm.xfw *.wotmod -r"/>
    <Task ID="extract_source3" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="x {last_download_filename}  -o{working_folder_package} -r default"/>
    <Task ID="extract_source3" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="e {last_download_filename}  -o{working_folder_package}\res_mods\configs\xvm\default_backup -r default"/>
    <!-- <Task ID="delete_tmp" Command="directory_delete" DirectoryPath="{working_folder_source}\res_mods\configs\xvm\default_backup\default"/> -->
    <Task ID="extract_source4" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="x {last_download_filename}  -o{working_folder_package} -r py_macro"/>
    <Task ID="extract_source5" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="x {last_download_filename}  -o{working_folder_package} -r shared_resources"/>
    <Task ID="extract_source6" Command="shell_exec" Filename="7z.exe" Wd="{working_folder_source}" Cmd="x {last_download_filename}  -o{working_folder_package} -r xfw_packages"/>


    <!-- get the source version of the mod by file name -->
    <Task ID="get_filename" Command="directory_search" DirectoryPath="{working_folder_source}" SearchPattern="?.?.?_????" Recursive="False" MacroPrefix="get_filename_results"/>
    <Task ID="get_modVersion_source" Command="macro_string_split_filename" MacroName="modVersion_source" Index="0" SplitCharacters="\" FilePath="{get_filename_results_0}"/>
    <!-- get modpack version from version field in database -->
    <Task ID="get_modVersion_modpack" Command="macro_create" MacroName="modVersion_modpack" MacroValue="{version}"/>


    
    <!-- i want to compare the result of two tasks:  -->
    <!-- (get_modVersion_source -> {modVersion_source} VS get_modVersion_modpack -> {modVersion_modpack}) -->
    <!-- <Task ID="compare_start" Command="compare_start"/> -->
    <!-- Compare get_modVersion-tasks results -->
    <!-- <Task ID="compare_string" Command="file_compare" -->
      <!-- FileA="{modVersion_source}" -->
      <!-- FileB="{modVersion_modpack}"/> -->
    <!-- <Task ID="compare_end" Command="compare_end"/> -->



    <!-- create the new zip -->
    <Task ID="create_zip" Command="shell_exec" Filename="7z.exe" Wd="{workDirectory}\package" Cmd="{7z_createFinalZip}"/>
    
<!-- update version field in database - [LogicalDependency_XVM_Main_Nightly] and [XVMconfigBuilder_BuildSelector_Nightly] -->
    <Task ID="update_package_version" Command="update_package_property" PropertyName="Version" PropertyValue="{modVersion_source}" TargetPackageUID="vxb6fqgbg3p0hfv9" />
    <Task ID="update_package_version" Command="update_package_property" PropertyName="Version" PropertyValue="{modVersion_source}" TargetPackageUID="8rzkblqj805kg3lj" />

    <!-- upload to the server -->
    <Task ID="upload_zip" Command="package_upload" FilePath="{workDirectory}\package\final.zip" ZipFileName="{packageName}_v{modVersion_source}_{clientVersion}_{date}.zip"/>

  </TaskDefinitions>
</AutomationSequence>